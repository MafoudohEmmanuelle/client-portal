# Generated by Django 5.2.1 on 2025-05-19 05:51

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='LeadRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raison_sociale', models.CharField(max_length=100)),
                ('interlocuteur', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('telephone', models.CharField(blank=True, max_length=15, null=True)),
                ('pays', models.CharField(max_length=100)),
                ('ville', models.CharField(max_length=50)),
                ('rue', models.CharField(blank=True, max_length=50, null=True)),
                ('bp', models.CharField(max_length=10, null=True)),
                ('secteur_activite', models.CharField(blank=True, choices=[('pharma', 'Pharmaceutique'), ('agro', 'Agroalimentaire'), ('cosmetique', 'Cosmétique'), ('chimie', 'Chimie'), ('autre', 'Autre')], max_length=50, null=True)),
                ('origine_client', models.CharField(blank=True, choices=[('salon', 'Salon professionnel'), ('site_web', 'Site Web'), ('recommandation', 'Recommandation'), ('prospection', 'Prospection'), ('autre', 'Autre')], max_length=50, null=True)),
                ('source_creation', models.CharField(max_length=50, null=True)),
                ('date_reception', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('client', 'Client'), ('commercial', 'Commercial'), ('be', 'BE'), ('chef_commercial', 'Chef Commercial'), ('admin', 'Admin')], default='client', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='be_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChefCommercial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='chefcommercial_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Commercial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_commercial', models.CharField(blank=True, max_length=50, null=True)),
                ('contact', models.CharField(blank=True, max_length=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='commercial_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_entreprise', models.CharField(max_length=50)),
                ('interlocuteur', models.CharField(max_length=100)),
                ('pays', models.CharField(max_length=100)),
                ('ville', models.CharField(max_length=50)),
                ('rue', models.CharField(blank=True, max_length=50, null=True)),
                ('telephone', models.CharField(blank=True, max_length=15, null=True)),
                ('bp', models.CharField(max_length=10)),
                ('type_client', models.CharField(choices=[('local', 'Client Local'), ('international', 'Client International')], default='local', max_length=20)),
                ('secteur_activite', models.CharField(blank=True, choices=[('pharma', 'Pharmaceutique'), ('agro', 'Agroalimentaire'), ('cosmetique', 'Cosmétique'), ('chimie', 'Chimie'), ('autre', 'Autre')], max_length=50, null=True)),
                ('origine_client', models.CharField(blank=True, choices=[('salon', 'Salon professionnel'), ('site_web', 'Site Web'), ('recommandation', 'Recommandation'), ('prospection', 'Prospection'), ('autre', 'Autre')], max_length=50, null=True)),
                ('date_validation_compte', models.DateField(blank=True, null=True)),
                ('derniere_connexion', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='client_profile', to=settings.AUTH_USER_MODEL)),
                ('commercial', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clients', to='accounts.commercial')),
            ],
        ),
    ]
